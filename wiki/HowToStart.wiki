#labels Featured
=Online=

For this *demo version* Windows and Linux users can use *Java Web Start*

  * If you have not Java on your PC then download it from [http://www.java.com]

  * Open simpleret-20101027-1255.jnlp file in your browser.

  * Press the "*Cancel*" button in the message box _"The application has requested permission to establish connections to <your computer>. Do you want to allow this action?"_

This Java Web Start application runs *restricted*, which means that it does not have access to some system resources such as local files. 

[http://en.wikipedia.org/wiki/Java_Web_Start] (English)

[http://ru.wikipedia.org/wiki/Java_Web_Start] (Russian)

_Linux was tested with !OpenJDK Java 6 Web Start._

=Locally=

Today it is not packaged, so please use *Eclipse Europa IDE* and _Import_ this project from SVN.


==Recording a program trace==

  * Create a new directory to hold your configuration file and output in APPDATA;

  * cd %APPDATA% mkdir simpleret cd simpleret 

  * Create a configuration file here "trace.cfg.test.txt" with the nextcontent:

{{{

# Enable tracing.
[enabled]  

# Print results to the file. 
[file]:trace.output.test.txt  

# Also print results to the Console. 
[display]  

# Include these classes. 
[include]:com.googlecode.* 

}}}

Run an example:

{{{
java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000 com.googlecode.simpleret.example.Main
}}}

or (for a shared memory transport on the Microsoft Windows platform)

{{{
java -Xdebug -Xrunjdwp:transport=dt_shmem,server=y,suspend=n,address=mysharedmemory com.googlecode.simpleret.example.Main
}}}

Note: for a large real life applications please also set -Xrunjdwp:suspend=n and turn on the Trace Recorder only temporarily, i.e. for some concreteactions.

Listening for transport dt_socket at address: 8000

Run a trace recorder:

{{{
java -cp ".;log4j_path/log4j.jar;jdk_lib_path/tools.jar" com.googlecode.simpleret.recorder.JPDATraceRecorder -host 127.0.0.1 -port 8000
}}}

For a shared memory transport:

{{{
-local some-shared-memory-address-name
}}}

Otherwise: 

{{{
-host somehost -port someport
}}}

See results in *trace.out.test.txt*

==Importing a program trace==

...

==Program Trace Viewer - keyboard reference==

Keys:
  * Q,W,E,R - scrolling backward;
  * A,S,D,F - scrolling forward;
  * Z - show only colourised records;
  * 1,2,3 - prepare a list of signatures to filter; every signature looks like `com.package.class.method` or `com.package.class` or like a Java regular expression `^.*method.*$` ;
  * 0 - Instrumental window;
  * 9 - input a range of identifiers to show;
  * X - display that range;
  * L - change the current deepness (level) of view;
  * H - HTML export;
  * U - AmaterasUML export;
  * Note: click on a link (number/id) to use the current colour of that line for"Clean colour".